services:
  nginx:
    image: nginx:alpine
    container_name: proj0_nginx
    ports:
      - "880:80"
      - "443:443"  # For HTTPS
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl  # If using SSL
      - ./django/static:/usr/share/nginx/html/static  # For Django static files
      - ./django/media:/usr/share/nginx/html/media  # For Django media files
    depends_on:
      - django
      # - careerflow
    restart: always
  api:
    container_name: proj0_api
    build: ./api
    image: proj0_api_image
    ports:
      - 580:80
    volumes:
      - ./api:/api
    # depends_on:
    #   - chroma

    environment:
      DEBUG: '1'  # Set to '0' for production
    restart: always



  django:
    container_name: proj0_django
    build: ./django
    image: proj0_django_image
    command: gunicorn proj0.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 --workers 4 --log-level info
    volumes:
      - ./django:/app
      # - static_volume:/app/staticfiles
      # - media_volume:/app/mediafiles
    expose: # Expose port only to linked services if Nginx will handle external
      - "8000"
    ports: # Remove this if Nginx will handle external port mapping
     - 8000:8000
    depends_on:
      - db
    environment:
        DEBUG: '1'
        DJANGO_ALLOWED_HOSTS: '*'
        DJANGO_SECRET_KEY: 'your-secret-key'
        DJANGO_SETTINGS_MODULE: 'proj0.settings'
        DJANGO_DB_NAME: 'postgres'
        DJANGO_DB_USER: 'postgres'
        DJANGO_DB_PASSWORD: 'postgres'
        DJANGO_DB_HOST: 'db'
        DJANGO_DB_PORT: '5432'
        EMAIL_HOST: 'smtp.example.com'
        EMAIL_PORT: '587'
        EMAIL_HOST_USER: 'your-email@example.com'
        EMAIL_HOST_PASSWORD: 'your-email-password'
        GOOGLE_CLIENT_ID: 'secret'
        GOOGLE_CLIENT_SECRET: 'secret'
        JWT_SECRET_KEY: 'your-jwt-secret-key'
        JWT_ALGORITHM: 'HS256'
        AI_SERVICE_URL: 'http://api:80/resumes/'


    restart: always

  db:
    image: postgres:16  # Changed from postgres:13 to postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes: # It's highly recommended to use a named volume to persist your data
      - postgres_data:/var/lib/postgresql/data
    restart: always


  redis:
    image: redis:6.2-alpine  # More specific version, alpine for smaller size
    # ports:
    #   - "6379:6379"
    volumes:
      - redis_data:/data  # Add persistence
    command: redis-server --appendonly yes  # Enable persistence
    restart: always




  celery:
    container_name: proj0_celery
    build: ./django
    image: proj0_django_image  # Reuse the Django image
    command: celery -A proj0 worker -l info
    volumes:
      - ./django:/app
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=1 
      - DJANGO_ALLOWED_HOSTS="localhost,127.0.0.1,django"
      - DJANGO_SECRET_KEY=secret
      - DJANGO_SETTINGS_MODULE=proj0.settings
      - DJANGO_DB_NAME=postgres
      - DJANGO_DB_USER=postgres
      - DJANGO_DB_PASSWORD=postgres
      - DJANGO_DB_HOST=db
      - DJANGO_DB_PORT=5432
      - PYTHONUNBUFFERED=1
      - AI_SERVICE_URL=http://api:80/resumes/
    restart: always

#   careerflow:
#     container_name: careerflow_frontend
#     build:
#       context: ./careerflow
#       args: # Pass build arguments
#         - NEXT_PUBLIC_BACKEND_URL=http://localhost:880
#         - NEXT_PUBLIC_API_URL=http://localhost:880
#     environment:
#       - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
#       - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
#       - NEXT_PUBLIC_BACKEND_URL=http://localhost:880
#       - NEXT_PUBLIC_API_URL=http://localhost:880


#     image: careerflow_frontend_image
#     ports:  
#       - "3000:3000"
#     depends_on:
#       - api
#       - django
#     restart: always
volumes:
  redis_data:  # Define volume for persistence
  postgres_data:  # Define volume for persistence