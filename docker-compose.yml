services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./django/static:/usr/share/nginx/html/static
      - web-root:/var/www/certbot
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - careerflow
    restart: always
    environment:
      - DOMAIN=${DOMAIN:-localhost}

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${CERTBOT_EMAIL:-admin@example.com} --agree-tos --no-eff-email -d ${DOMAIN:-localhost}
    profiles: ["ssl"]
    restart: "no"

  api:
    build: ./api
    image: ${DOCKER_USERNAME:-mahmutatia}/proj0_api_image
    ports:
      - "580:80"
    volumes:
      - ./api:/api
    environment:
      - DEBUG=${DEBUG:-0}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2:-false}
      - LANGCHAIN_ENDPOINT=${LANGCHAIN_ENDPOINT}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT}
    restart: always

  django:
    build: ./django
    image: ${DOCKER_USERNAME:-mahmutatia}/proj0_django_image
    command: sh -c "if [ \"${DEBUG:-0}\" = \"1\" ]; then python manage.py runserver 0.0.0.0:8000; else gunicorn proj0.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 --workers 4 --log-level info; fi"
    volumes:
      - ./django:/app
    expose:
      - "8000"
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      # Django Core Settings
      - DEBUG=${DEBUG:-0}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-proj0.settings}
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED:-1}
      
      # Database Settings (using corrected variable names)
      - DJANGO_DB_NAME=${DJANGO_DB_NAME}
      - DJANGO_DB_USER=${DJANGO_DB_USER}
      - DJANGO_DB_PASSWORD=${DJANGO_DB_PASSWORD}
      - DJANGO_DB_HOST=${DJANGO_DB_HOST:-db}
      - DJANGO_DB_PORT=${DJANGO_DB_PORT:-5432}
      
      # Email Settings
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-True}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL:-False}
      
      # Authentication
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      
      # Service URLs
      - AI_SERVICE_URL=${AI_SERVICE_URL:-http://api:80/resumes/}
      
      # Superuser Settings
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      
      # Security Settings
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT:-True}
      - SECURE_PROXY_SSL_HEADER=${SECURE_PROXY_SSL_HEADER}
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE:-True}
      - CSRF_COOKIE_SECURE=${CSRF_COOKIE_SECURE:-True}

      # POLAR Secret
      - POLAR_API_KEY=${POLAR_API_KEY}
      - POLAR_WEBHOOK_SECRET=${POLAR_WEBHOOK_SECRET}
      - PAYMENT_HOST=${PAYMENT_HOST:-localhost:3000}
    restart: always

  db:
    image: postgres:16
    environment:
      # Fixed: Use POSTGRES_* variables (not DJANGO_DB_*)
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5


  careerflow:
    build:
      context: ./careerflow
      args:
        # Build-time arguments (embedded in static build)
        - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
        - NEXT_PUBLIC_DJANGO_URL=${NEXT_PUBLIC_DJANGO_URL}
        - NEXT_PUBLIC_AI_API_URL=${NEXT_PUBLIC_AI_API_URL}
        - NEXT_PUBLIC_IPDATA_API_KEY=${NEXT_PUBLIC_IPDATA_API_KEY}
        - NODE_ENV=${NODE_ENV:-production}
        
    environment:
      # Runtime environment variables
      - NODE_ENV=${NODE_ENV:-production}
      - NEXT_TELEMETRY_DISABLED=${NEXT_TELEMETRY_DISABLED:-1}
      
      # Authentication
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_JWT_SECRET=${NEXTAUTH_JWT_SECRET}
      - NEXTAUTH_BACKEND_URL=${NEXTAUTH_BACKEND_URL}
      
      # Public URLs (for runtime)
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_DJANGO_URL=${NEXT_PUBLIC_DJANGO_URL}
      - NEXT_PUBLIC_AI_API_URL=${NEXT_PUBLIC_AI_API_URL}
      - NEXT_PUBLIC_IPDATA_API_KEY=${NEXT_PUBLIC_IPDATA_API_KEY}
      
    image: ${DOCKER_USERNAME:-mahmutatia}/proj0_careerflow_image
    ports:
      - "3000:3000"
    depends_on:
      - api
      - django
    restart: always

volumes:
  postgres_data:
  certbot-etc:
  certbot-var:
  web-root: